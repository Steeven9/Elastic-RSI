openapi: 3.0.3
info:
  version: 0.1.0
  title: Elastic-RSI
  description: RSI web application

servers:
  - url: https://elastic-rsi.soulsbros.ch
  - url: http://localhost:4000

# TODO req bodies and result schemas

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    QueryResults: # TODO
      type: object
    Documents: # TODO
      type: object
    Buckets:
      type: object
      properties:
        aggregation(s):
          type: object
          properties:
            buckets:
              type: object
              properties:
                bucket_number:
                  type: object
                  properties:
                    doc_count:
                      type: integer
                      example: 69420
    ClusterStatus:
      type: object
      properties:
        cluster_name:
          type: string
          example: soulsbros
        status:
          type: string
          example: yellow
        timed_out:
          type: bool
          example: false
        number_of_nodes:
          type: integer
          example: 1
        number_of_data_nodes:
          type: integer
          example: 1
        active_primary_shards:
          type: integer
          example: 28
        active_shards:
          type: integer
          example: 28
        relocating_shards:
          type: integer
          example: 0
        initializing_shards:
          type: integer
          example: 0
        unassigned_shards:
          type: integer
          example: 2
        delayed_unassigned_shards:
          type: integer
          example: 0
        number_of_pending_tasks:
          type: integer
          example: 0
        number_of_in_flight_fetch:
          type: integer
          example: 0
        task_max_waiting_in_queue_millis:
          type: integer
          example: 0
        active_shards_percent_as_number:
          type: integer
          example: 93.33333333333333

paths:
  # Cluster/server endpoints
  /api/health:
    get:
      summary: Checks if the server is alive
      tags:
        - cluster
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: Ok elastic-rsi

  /api/elastic/status:
    get:
      summary: Returns the status of the cluster
      tags:
        - cluster
      responses:
        "200":
          description: The cluster status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClusterStatus"

  # Actual ElasticSearch endpoints
  /api/elastic/aggs:
    post:
      summary: Returns the buckets for the given filter
      tags:
        - elastic
      security:
        - bearerAuth: []
      responses:
        "200":
          description: The buckets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Buckets"
        "401":
          description: Auth error
          content:
            text/plain:
              schema:
                type: string
                example: Missing or malformed auth token

  /api/elastic/count:
    post:
      summary: Returns the documents count for a given query
      tags:
        - elastic
      security:
        - bearerAuth: []
      responses:
        "200":
          description: The document count
          content:
            text/plain:
              schema:
                type: integer
                example: 69420
        "401":
          description: Auth error
          content:
            text/plain:
              schema:
                type: string
                example: Missing or malformed auth token

  /api/elastic/get:
    post:
      summary: Returns the result for a given query
      tags:
        - elastic
      security:
        - bearerAuth: []
      responses:
        "200":
          description: The query results
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryResults"
        "401":
          description: Auth error
          content:
            text/plain:
              schema:
                type: string
                example: Missing or malformed auth token

  /api/elastic/getAll:
    get:
      summary: Returns a sample of 10'000 documents
      tags:
        - elastic
      security:
        - bearerAuth: []
      responses:
        "200":
          description: The documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Documents"
        "401":
          description: Auth error
          content:
            text/plain:
              schema:
                type: string
                example: Missing or malformed auth token

  /api/elastic/getAllDataUNSAFE:
    get:
      deprecated: true
      summary: Returns *all* data (DON'T USE, IT CRASHES THE SERVER)
      tags:
        - elastic
      security:
        - bearerAuth: []
      responses:
        "200":
          description: The documents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Documents"
        "401":
          description: Auth error
          content:
            text/plain:
              schema:
                type: string
                example: Missing or malformed auth token
